{
  "hash": "07c30e51e26a65097a80cca198804af6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Fertility final\"\nformat: html\neditor: visual\n---\n\n##Setting up libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visdat)\nlibrary(naniar)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'naniar'\n\nThe following object is masked from 'package:skimr':\n\n    n_complete\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(dplyr)\nlibrary(tinytable)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tinytable'\n\nThe following object is masked from 'package:ggplot2':\n\n    theme_void\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(DT)\nlibrary(crosstable)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n```\n\n\n:::\n:::\n\n\n##Reading Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFertility <- readr::read_delim(\"Data/Fertility.csv\") %>% \n  janitor::clean_names(case=\"snake\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 254654 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): morekids, gender1, gender2, afam, hispanic, other\ndbl (3): rownames, age, work\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nFertility\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 254,654 × 9\n   rownames morekids gender1 gender2   age afam  hispanic other  work\n      <dbl> <chr>    <chr>   <chr>   <dbl> <chr> <chr>    <chr> <dbl>\n 1        1 no       male    female     27 no    no       no        0\n 2        2 no       female  male       30 no    no       no       30\n 3        3 no       male    female     27 no    no       no        0\n 4        4 no       male    female     35 yes   no       no        0\n 5        5 no       female  female     30 no    no       no       22\n 6        6 no       male    female     26 no    no       no       40\n 7        7 no       female  male       29 no    no       no        0\n 8        8 no       male    male       33 no    no       no       52\n 9        9 no       female  male       29 no    no       no        0\n10       10 no       male    female     27 no    no       no        0\n# ℹ 254,644 more rows\n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFertility_1 <- Fertility %>%\n  mutate(\n    morekids = as.factor(morekids),\n    gender1 = as.factor(gender1),\n    gender2 = as.factor(gender2),\n    afam = as.factor(afam),\n    hispanic = as.factor(hispanic),\n    other = as.factor(other)\n  ) %>%\n \n  dplyr::relocate(age, afam, hispanic, other, gender1,gender2,morekids, .after= rownames)\nFertility_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 254,654 × 9\n   rownames   age afam  hispanic other gender1 gender2 morekids  work\n      <dbl> <dbl> <fct> <fct>    <fct> <fct>   <fct>   <fct>    <dbl>\n 1        1    27 no    no       no    male    female  no           0\n 2        2    30 no    no       no    female  male    no          30\n 3        3    27 no    no       no    male    female  no           0\n 4        4    35 yes   no       no    male    female  no           0\n 5        5    30 no    no       no    female  female  no          22\n 6        6    26 no    no       no    male    female  no          40\n 7        7    29 no    no       no    female  male    no           0\n 8        8    33 no    no       no    male    male    no          52\n 9        9    29 no    no       no    female  male    no           0\n10       10    27 no    no       no    male    female  no           0\n# ℹ 254,644 more rows\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFertility_1 %>%\n  filter(afam==\"yes\") %>% \n  dplyr::summarise(\n    mean_work = mean(work, na.rm=T),\n    sd_work = sd(work,na.rm=T),\n    min_work = min(work, na.rm=T),\n    max_work = max(work, na.rm=T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mean_work sd_work min_work max_work\n      <dbl>   <dbl>    <dbl>    <dbl>\n1      29.1    22.4        0       52\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFertility_1 %>%\n  filter(hispanic==\"yes\") %>% \n  dplyr::summarise(\n    mean_work = mean(work, na.rm=T),\n    sd_work = sd(work,na.rm=T),\n    min_work = min(work, na.rm=T),\n    max_work = max(work, na.rm=T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mean_work sd_work min_work max_work\n      <dbl>   <dbl>    <dbl>    <dbl>\n1      18.2    21.7        0       52\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFertility_1 %>%\n  filter(other==\"yes\") %>% \n  dplyr::summarise(\n    mean_work = mean(work, na.rm=T),\n    sd_work = sd(work,na.rm=T),\n    min_work = min(work, na.rm=T),\n    max_work = max(work, na.rm=T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mean_work sd_work min_work max_work\n      <dbl>   <dbl>    <dbl>    <dbl>\n1      19.8    22.2        0       52\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}